
swagger: "2.0"

################################################################################
#                              API Information                                 #
#                        http://editor.swagger.io/#!/                          #
################################################################################
info:
  version: "1.0.0"
  title: Rest API
host: localhost:3000
basePath: /
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json

################################################################################
#                                 Paths                                        #
################################################################################
paths:
  /signIn:
    x-swagger-router-controller: sign
    post:
      description: Validate the user credentials to access the UI console
      parameters:
        - name: user
          in: body
          description: User credentials
          schema:
            $ref: '#/definitions/User'
          required: true
      tags:
        - Sign
      responses:
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
        200:
          description: User Credentials Matched
          schema:
            $ref: '#/definitions/UserInfo'
  /signUp:
    x-swagger-router-controller: sign
    post:
      description: Register new user to provide access to UI Console
      parameters:
        - name: user
          in: body
          description: User credentials
          schema:
            $ref: '#/definitions/User'
          required: true
      tags:
        - Sign
      responses:
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
        200:
          description: User Registered
          schema:
            $ref: '#/definitions/User'

  /place/create:
    x-swagger-router-controller: place
    post:
      description: Register a new place and create corresponding Topic to publish/subscrible messages.
      parameters:
        - name: place
          in: body
          description: Place co-ordinates and topic
          schema:
            $ref: '#/definitions/Place'
          required: true
      tags:
        - Place
      responses:
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
        200:
          description: Message Posted
          schema:
            $ref: '#/definitions/Message'

  /user/{userId}:
    x-swagger-router-controller: user
    get:
      description: Returns Basic Information for user with given userId
      parameters:
        - name: "userId"
          in: "path"
          description: "user id"
          required: true
          type: "integer"
          format: "float"
      tags:
        - User
      responses:
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
        200:
          description: Place Created
          schema:
            $ref: '#/definitions/UserInfo'

  /place/post:
    x-swagger-router-controller: place
    post:
      description: Publish messages to topic
      parameters:
        - name: message
          in: body
          description: Publish message to topic
          schema:
            $ref: '#/definitions/Message'
          required: true
      tags:
        - Kafka
      responses:
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
        200:
          description: Message Posted
          schema:
            $ref: '#/definitions/Message'

  /place/post/{postId}/comment:
    x-swagger-router-controller: place
    post:
      description: Comment on a specific Post
      parameters:
        - name: "postId"
          in: "path"
          description: "Post ID under which user has commented"
          required: true
          type: "integer"
        - name: message
          in: body
          description: Comment on a specific Post
          schema:
            $ref: '#/definitions/Message'
          required: true
      tags:
        - Kafka
      responses:
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
        200:
          description: Message Posted
          schema:
            $ref: '#/definitions/Message'

  /place/post/{postId}/trust:
    x-swagger-router-controller: place
    post:
      description: Add trust factor to a post
      parameters:
        - name: "postId"
          in: "path"
          description: "Post ID under which user has trusted"
          required: true
          type: "integer"
        - name: message
          in: body
          description: Add trust factor to a post
          schema:
            $ref: '#/definitions/Message'
          required: true
      tags:
        - Kafka
      responses:
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
        200:
          description: Message Posted
          schema:
            $ref: '#/definitions/Message'

  /user/{userId}/longitude/{longitude}/latitude/{latitude}:
    x-swagger-router-controller: user
    get:
      description: Returns the user info plus the spaces around
      parameters:
        - name: "userId"
          in: "path"
          description: "user id"
          required: true
          type: "integer"
          format: "float"
        - name: "longitude"
          in: "path"
          description: "longitude location of user"
          required: true
          type: "integer"
          format: "float"
        - name: "latitude"
          in: "path"
          description: "latitude location of user"
          required: true
          type: "integer"
          format: "float"
      tags:
        - User
      responses:
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
        200:
          description: Nearest Places
          schema:
            $ref: '#/definitions/UserNearestPlaces'

  /place/subscribe:
    x-swagger-router-controller: place
    post:
      description: Subscribe topic for messages
      parameters:
        - name: subscribe
          in: body
          description: Subscribe topic to messages
          schema:
            $ref: '#/definitions/Subscribe'
          required: true
      tags:
        - Kafka
      responses:
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
        200:
          description: Message Posted
          schema:
            $ref: '#/definitions/Message'

  /place/unsubscribe:
    x-swagger-router-controller: place
    post:
      description: Unsubscribe topic for messages
      parameters:
        - name: unsubscribe
          in: body
          description: Unsubscribe topic to messages
          schema:
            $ref: '#/definitions/Unsubscribe'
          required: true
      tags:
        - Kafka
      responses:
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
        200:
          description: Message Posted
          schema:
            $ref: '#/definitions/Message'

  /place/{placeId}:
    x-swagger-router-controller: placeInfo
    get:
      description: Returns the Place info
      parameters:
        - name: "placeId"
          in: "path"
          description: "place id"
          required: true
          type: "integer"
          format: "float"
      tags:
        - Place
      responses:
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
        200:
          description: Message Subscribed
          schema:
            $ref: '#/definitions/PlaceInfo'
  /swagger:
      x-swagger-pipe: swagger_raw

################################################################################
#                                   Models                                     #
################################################################################
definitions:
  Error:
      type: object
      properties:
        message:
          type: string
  User:
    type: object
    properties:
      email:
        type: string
      password:
        type: string

  Place:
    type: object
    properties:
      name:
        type: string
      longitude:
        type: string
      latitude:
        type: string
      createdBy:
        type: string
      queueName:
        type: string

  Message:
    type: object
    properties:
      queueName:
        type: string
      id:
        type: string
      parent:
        type: string
      type:
        type: string
      sender:
        type: string
      trustFactor:
        type: string
      message:
        type: string

  Subscribe:
    type: object
    properties:
      queueName:
        type: string

  Unsubscribe:
    type: object
    properties:
      queueName:
        type: string

  UserInfo:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
      user:
        type: string
      img:
        type: string
      trustFactor:
        type: integer

  UserNearestPlaces:
    type: object
    properties:
      user:
        type: string
      img:
        type: string
      trustFactor:
        type: integer
      localhost:
        type: object
        properties:
          latitude:
            type: integer
          longitude:
            type: integer
      spaces:
        type: "array"
        items:
          type: object
          properties:
            name:
              type: string
            distance:
              type: integer
            address:
              type: string
            href:
              type: string
            trustFactor:
              type: integer

  PlaceInfo:
    type: object
    properties:
      name:
        type: string
      address:
        type: string
      trustFactor:
        type: integer
      hosts:
        type: integer
      posts:
        type: array
        items:
          type: object
          properties:
            message:
              type: string
            trusts:
              type: object
              properties:
                guestUpvotes:
                  type: integer
                hostsUpvotes:
                  type: integer
